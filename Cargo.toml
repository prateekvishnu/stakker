[package]
name = "stakker"
version = "0.2.5"
authors = ["Jim Peters <jim@uazu.net>"]
edition = "2018"

description = "A lightweight low-level single-threaded actor runtime"
license = "MIT/Apache-2.0"
readme = "README.md"

repository = "https://github.com/uazu/stakker"
documentation = "https://docs.rs/stakker"
homepage = "https://uazu.github.io/stakker"

keywords = [ "actor", "runtime", "async", "pony", "erlang" ]
categories = [ "asynchronous", "concurrency", "data-structures" ]

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
static_assertions = "1.0"
qcell = "0.5"
slab = "0.4"
anymap = { version = "0.12", optional = true }

# For more details on features, see crate docs.  Features are additive
# in cargo, so summing features must result a less restrictive, more
# flexible configuration (even if less efficient), or else things will
# break when different crates using Stakker are combined in a build.

[features]
default = ["anymap", "inter-thread", "test-multi-thread"]

# Disable all unsafe code and compile with #[forbid(unsafe_code)]
no-unsafe = []

# Disable the unsafe fast FnOnce queue code
no-unsafe-queue = []

# Allow Stakker to run in more than one thread at a time
multi-thread = []

# Allow more than one Stakker to run in each thread
multi-stakker = []

# Force use of the inline Deferrer
inline-deferrer = []

# Enable inter-thread operations: Waker, PipedThread
inter-thread = []

# Enable core logger support (Stakker::set_logger())
logger = []

# There is no way to tell `cargo test` to run in a single thread from
# Cargo.toml, so in order to make `cargo test` succeed with no
# additional options, when running tests, effectively enable feature
# "multi-thread".  However this distorts testing of applications
# because they might test with different features to what the
# application will actually run with.  TODO: Find a better solution.
test-multi-thread = []
